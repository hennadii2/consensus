syntax = "proto3";

package protos;

enum ClaimNamespace {
  UNKNOWN_CLAIM_NAMESPACE = 0;
  EXTRACTED_FROM_PAPER = 1;
}

// WARNING: Do not change.
// Used to generate a stable ID for a claim.
message ClaimId {
  ClaimNamespace namespace = 1;
  string text = 2;
  string source = 3;
}

// Next id: 14
message ClaimMetadata {
  // Display text of the claim
  string text = 1;

  // Short human readable description for the claim used in the URL
  string url_slug = 2;

  // Model probability that this is a claim
  float probability = 3;

  // Vector embedding of text field for search
  repeated float embedding = 4;

  // Vector embedding of paper title field for search
  repeated float title_embedding = 8;

  // Year of publication for this claim's paper
  int32 paper_publish_year = 5;

  // Number of incoming citations on this claim's paper
  int32 paper_citation_count = 6;

  // Title of this claim's paper
  string paper_title = 7;

  // Indicates whether the claim's display text has been modified with claim enhancement
  bool is_enhanced = 9;

  // Study type string value
  string study_type = 10;

  // If applicable, defines whether the study's population was human or animal
  // Applied to Biomed+ papers with study types:
  // Non-RCT Experimental, Non-RCT Observational, Case Report or RCT
  string population_type = 11;

  // If applicable, indicates the # of participants in a study
  // Applied to Biomed+ papers with study types:
  // Non-RCT Exp, Non-RCT Observational, Case Report or RCT
  int32 sample_size = 12;

  // If applicable, indicates the # of studies included in the review
  // Applied to Biomed+ papers with study types:
  // Literature Review, Systematic Review, or Meta Analysis
  int32 study_count = 13;
}

message Claim {
  // Hex hash of ClaimId proto
  string id = 1;

  // Elasticsearch document ID
  string document_id = 4;

  // ID of the paper that this claim was pulled from
  string paper_id = 2;

  // Metadata related to a claim
  ClaimMetadata metadata = 3;
}
